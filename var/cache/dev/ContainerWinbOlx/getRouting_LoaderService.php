<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'routing.loader' shared service.

$a = new \Symfony\Component\HttpKernel\Config\FileLocator(($this->services['kernel'] ?? $this->get('kernel', 1)), '/application/src/Resources', array(0 => '/application/src'));

$b = new \Symfony\Bundle\FrameworkBundle\Routing\AnnotatedRouteControllerLoader(($this->privates['annotations.cached_reader'] ?? $this->getAnnotations_CachedReaderService()));

$c = new \Symfony\Component\Config\Loader\LoaderResolver();
$c->addLoader(new \Symfony\Component\Routing\Loader\XmlFileLoader($a));
$c->addLoader(new \Symfony\Component\Routing\Loader\YamlFileLoader($a));
$c->addLoader(new \Symfony\Component\Routing\Loader\PhpFileLoader($a));
$c->addLoader(new \Symfony\Component\Routing\Loader\GlobFileLoader($a));
$c->addLoader(new \Symfony\Component\Routing\Loader\DirectoryLoader($a));
$c->addLoader(new \Symfony\Component\Routing\Loader\DependencyInjection\ServiceRouterLoader($this));
$c->addLoader($b);
$c->addLoader(new \Symfony\Component\Routing\Loader\AnnotationDirectoryLoader($a, $b));
$c->addLoader(new \Symfony\Component\Routing\Loader\AnnotationFileLoader($a, $b));

return $this->services['routing.loader'] = new \Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader(($this->privates['controller_name_converter'] ?? $this->privates['controller_name_converter'] = new \Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser(($this->services['kernel'] ?? $this->get('kernel', 1)))), $c);
